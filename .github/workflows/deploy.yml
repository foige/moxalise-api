name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: moxalise-api
  REGION: europe-west3
  REPOSITORY: moxalise-api

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Create Artifact Registry Repository
        run: |
          # Check if repository exists, if not create it
          if ! gcloud artifacts repositories describe $REPOSITORY --location=$REGION 2>/dev/null; then
            echo "Creating Artifact Registry repository $REPOSITORY in $REGION"
            gcloud artifacts repositories create $REPOSITORY \
              --repository-format=docker \
              --location=$REGION \
              --description="Docker repository for $SERVICE_NAME"
          else
            echo "Repository $REPOSITORY already exists"
          fi

      - name: Authorize Docker push
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          docker build --platform linux/amd64 -t $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:${{ github.sha }} .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:${{ github.sha }} \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated

      - name: Show deployed service URL
        run: |
          echo "Service URL: $(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')"